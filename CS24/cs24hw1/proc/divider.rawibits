0000 1 000 101 111  # R7 <- R0 + R5    set remainder <- dividend + 0 (constant); R6 <- 0 read in
0010 1 111 001 111  # R7 <- R7 - R1  (WHILE:TOP) true, also subtract divisor from remainder
1000 1 111 011 010  # R2 = R7 AND R3  # mask to extract high bit
1010 0 010 000110   # BNZ R2, DONELOOP if remainder >= 0, we don't branch, we increment R6, else we goto DONELOOP
0101 1 110 000 110  # R6 <- R6 + 1   increment quotient;
1010 0 100 000001  # BNZ TRUE, WHILE force goto while loop, always true by reading the true constant register.
0000 1 111 001 111  # R7 <- R7 + R1  (DONELOOP:)  adds divisor back to remainder to get positive remainder.
1111 0 000 000 000  # DONE


